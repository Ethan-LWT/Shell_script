#!/usr/bin/env shgit_create () {    hash cowsay &>/dev/null    if [[ $? -ne 0 ]]; then        brew install cowsay || pacman -s cowsay || apt-get install cowsay    fi    git ls-remote "https://github.com/$(git config user.name)/$1" &>/dev/null    if [[ $? -eq 0 ]]; then        cowsay -f tux "Ooops!!                       The repository has already existed.                       EXIT!"    else        grep -q token "$HOME/.gitconfig" &>/dev/null 2>&1        if [[ $? -ne 0 ]]; then            if [ "$2" = "-p" ] ; then                echo "Create the private "$1" repository in My github"                curl -u "$(git config user.name)" https://api.github.com/user/repos -d "{\"name\":\"$1\", \"private\":true}" | grep -q "$1"            else                echo "Create the "$1" repository in My github"                curl -u "$(git config user.name)" https://api.github.com/user/repos -d "{\"name\":\"$1\"}" | grep -q "$1"            fi        else            if [[ "$2" = "-p" ]]; then                echo "Create the private "$1" repository in My github"                curl -H "Authorization: token $(git config user.token)" --location --request POST "https://api.github.com/user/repos" --data-raw "{\"name\":\"$1\"}, \"private\":true}" &>/dev/null 2>&1            else                echo "Create the "$1" repository in My github"                curl -H "Authorization: token $(git config user.token)" --location --request POST "https://api.github.com/user/repos" --data-raw "{\"name\":\"$1\"}" &>/dev/null 2>&1            fi        fi        if [[ $? -eq 0 ]]; then            mkdir "$1" && echo "Create the "$1" procject folder."            cd "$1" && echo "# "$1"" >> README.md            git init && git add README.md &>/dev/null 2>&1            git commit -m "create project" &>/dev/null 2>&1            git remote add origin https://github.com/$(git config user.name)/"$1".git &>/dev/null 2>&1            git push -u origin master &>/dev/null 2>&1            echo "DONE"        else            cowsay -f tux "Ooops!!, Wrong Password ~"            break &>/dev/null        fi    fi}